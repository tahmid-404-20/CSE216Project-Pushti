<!DOCTYPE html>
<html lang="en">
  <head>
    <link rel="icon" type="image/png" href="/images/logo_caption_sm.png" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- JavaScript Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"
      crossorigin="anonymous"
    ></script>
    <title><%= locals.title %></title>
    <link rel="stylesheet" href="/css/bootstrap.min.css" type="text/css" />
  </head>
  <body onload="getTable()">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
      <div class="container-fluid">
        <img
          src="/images/logo_caption_sm.png"
          style="width: 100px; height: 100px"
          alt="logo"
        />
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarColor01"
          aria-controls="navbarColor01"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarColor01">
          <ul class="navbar-nav me-auto">
            <li class="nav-item">
              <a class="nav-link" href="/agent"
                >Home
                <span class="visually-hidden">(current)</span>
              </a>
            </li>
            <li class="nav-item">
              <a
                id="gotoRequests"
                class="nav-link active"
                href="/agent/requests"
                >Requests</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/agent/register-buyer"
                >Register a Buyer</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/agent/buyproducts">Buy Products</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/agent/sellproducts">Sell Products</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/agent/inventorystatus"
                >Inventory Status</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/agent/buyhistory">Buy History</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/agent/sellhistory">Sell History</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/agent/sendfeedback">Send Feedback</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/logout">Log Out</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div>
      <table class="table table-striped" id="reqtab">
        <thead>
          <tr>
            <th scope="col">NID</th>
            <th scope="col">Name</th>
            <th scope="col">Farmer Type</th>
            <th scope="col">Loan Amount</th>
            <th scope="col">Details</th>
            <th scope="col">Approve</th>
            <th scope="col">Reject</th>
          </tr>
        </thead>
      </table>
    </div>
    <div><h6 id="msg" style="text-align: center; color: grey"></h6></div>

    <script>
      async function postData(url = "", data = {}) {
        // Default options are marked with *
        const response = await fetch(url, {
          method: "POST", // *GET, POST, PUT, DELETE, etc.
          mode: "cors", // no-cors, *cors, same-origin
          cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
          credentials: "same-origin", // include, *same-origin, omit
          headers: {
            "Content-Type": "application/json",
            // 'Content-Type': 'application/x-www-form-urlencoded',
          },
          redirect: "follow", // manual, *follow, error
          referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
          body: JSON.stringify(data), // body data type must match "Content-Type" header
        });

        return response.json(); // parses JSON response into native JavaScript objects
      }

      function getTable() {
        postData("/agent/requests", {}).then((data) => {
          if (data.length == 0) {
            document.getElementById("msg").innerHTML = "No pending request!";
            return;
          }
          var table = document.getElementById("reqtab");
          for (let x of data) {
            var row = table.insertRow();
            for (let i = 0; i < 10; i++) {
              row.insertCell();
            }
          }
          var rows = table.rows;
          for (var i = 1; i < rows.length; i++) {
            let nid = data[i - 1].nid;
            rows[i].cells[0].append(document.createTextNode(nid));
            let name = data[i - 1].name;
            rows[i].cells[1].append(document.createTextNode(name));
            let phoneNo = data[i - 1].phoneNo;
            rows[i].cells[7].append(document.createTextNode(phoneNo));
            rows[i].cells[7].style.display = "none";
            let req_id = data[i - 1].req_id;
            rows[i].cells[8].append(document.createTextNode(req_id));
            rows[i].cells[8].style.display = "none";
            let address = data[i - 1].address;
            rows[i].cells[9].append(document.createTextNode(address));
            rows[i].cells[9].style.display = "none";
            let type_id = data[i - 1].type_id;
            let loan_id = data[i - 1].loan_id;
            postData("/agent/requests/farmer-type", {
              type_id: type_id,
              row: i,
            }).then((data) => {
              let type = data.farmerType;
              var rows = table.rows;
              var i = data.row;
              rows[i].cells[2].append(document.createTextNode(type));
            });
            postData("/agent/requests/loan-amount", {
              loan_id: loan_id,
              row: i,
            }).then((data) => {
              let loan = data.amount;
              var rows = table.rows;
              var i = data.row;
              rows[i].cells[3].append(document.createTextNode(loan));
            });
            var button = document.createElement("button");
            button.innerHTML = "Click";
            button.name = "Show";
            button.className = "btn btn-info";
            button.addEventListener("click", (e) => {
              let p = e.target.parentElement;
              p = p.parentElement;
              nid = p.cells[0].innerHTML;
              name = p.cells[1].innerHTML;
              phone = p.cells[7].innerHTML;
              address = p.cells[9].innerHTML;
              alert(
                `NID: ${nid}\nName: ${name}\nPhone: ${phone}\nAddress: ${address}`
              );
            });
            rows[i].cells[4].append(button);

            button = document.createElement("button");
            button.innerHTML = "Accept";
            button.name = "Accept";
            button.className = "btn btn-success";
            button.addEventListener("click", (e) => {
              let p = e.target.parentElement;
              p = p.parentElement;
              let req_id = p.cells[8].innerHTML;
              postData("requests/update-request", {
                req_id: req_id,
                status: "T",
              }).then((data) => {
                if (data.error != undefined) {
                  alert(
                    "Could not approve! Please check budget or try again later!"
                  );
                  return;
                }
                alert("Request approved!");
                location.reload();
              });
            });
            rows[i].cells[5].append(button);

            button = document.createElement("button");
            button.innerHTML = "Reject";
            button.name = "Reject";
            button.className = "btn btn-danger";
            button.addEventListener("click", (e) => {
              let p = e.target.parentElement;
              p = p.parentElement;
              let req_id = p.cells[8].innerHTML;
              postData("requests/update-request", {
                req_id: req_id,
                status: "F",
              }).then((data) => {
                if (data.error != undefined) {
                  alert("Something went wrong! Try again later!");
                  return;
                }
                alert("Request rejected!");
                location.reload();
              });
            });
            rows[i].cells[6].append(button);
          }
        });
      }
    </script>
    <script
      src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
      integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
      integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
      integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
